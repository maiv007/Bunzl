[PCOMM SCRIPT HEADER]
LANGUAGE=VBSCRIPT
DESCRIPTION=
[PCOMM SCRIPT SOURCE]
OPTION EXPLICIT
autECLSession.SetConnectionByName(ThisSessionName)

REM Author: Joseph Bajcar
REM COPYRIGHT AUGUST 2018
REM This line calls the macro subroutine
REM This is the property of Joseph Bajcar. Any unauthorized use will result in legal action.

main

sub main()
	'*******Variables*******
	Dim aFile, myFile, filePath, username, reportNumber
	Dim vaMyArray, objLine, strInfo, x, y
	Dim arraySize, rows, columns
	Dim dataArray : dataArray = Array()
	Dim tempString
	Const ForReading = 1
	Dim struser 'network username

	Dim objFSO, outfile, objFile 'MSR AS400 script report file variables
	Dim datevalue, randomNumber, rnString
	'*******Declarations*******
	columns = 15
	Call RndNumber(randomNumber, rnString)
	reportNumber = rnString
	datevalue = Month(date)&Day(date)&Year(date)
	struser = CreateObject("Wscript.Network").username
	filePath = "C:\Users\" & struser & "\Documents\AS400 MACRO CSV\CSV_Process Contracts.csv"
	outfile = "C:\Users\" & struser & "\Documents\AS400 MACRO REPORTS\" & "AS400-MSR_" & datevalue & "_" & reportNumber & "_LOADREBATE" & ".csv" 'report csv file
	'**************************
	
	'******Calculate file size in ROWS******
	Call CreateFile(aFile, myFile, filePath, objLine) 'load in CSV file
	Call FindFileSize(rows, objLine, strInfo, tempString) 'calls function to calculate number of rows in CSV file
	ReDim dataArray(rows, columns) 'redefine array based on CSV file size
	
	'******Create and initalize MSR Report csv file******
	Call initializeReport(objFSO, objFile, outfile, struser)
	
	'******Load data in CSV file into array******
	Call CreateFile(aFile, myFile, filePath, objLine) 'reloads in CSV files
	Call LoadData(objLine, dataArray, columns, strInfo, vaMyArray, rows) 'load data from CSV file into data array
	
	'******Run AS400 macro program******
	Call RunMacro(dataArray, rows, columns, objFile, reportNumber)
end sub

Function RndNumber(randomNumber, rnString)
	Dim nLow, nHigh,x
	rnString = ""
	For x = 1 to 6
		nLow = 0
		nHigh = 9
		Randomize
		randomNumber = Int((nHigh - nLow + 1)*Rnd + nLow)
		rnString = rnString & randomNumber
	Next
End function

Function CreateFile(aFile, myFile, filePath, objLine)
	Set aFile = CreateObject("Scripting.FileSystemObject") 'create file object
	Set myFile = aFile.GetFile(filePath) 'create file object with CSV file
	Set objLine = myFile.OpenAsTextStream(1) 'create object to stream data from CSV file
End function

Function FindFileSize(rows, objLine, strInfo, tempString)
	rows = 0
	Do while objLine.AtEndOfStream <> true 'read file until null pointer, end of file/data
		strInfo = objLine.ReadLine
		tempString = Split(strInfo,",")
		if StrComp(tempString(1), " ") = -1 then 'checks to see if the cell is blank and stops ReadIn stream
			Exit do
		end if
		rows = rows + 1
	Loop
	rows = rows - 1
End function

Function LoadData(objLine, dataArray, columns, strInfo, vaMyArray, rows)
	Dim x,y
	x = 0
	Do while objLine.AtEndOfStream <> true 'read file until null pointer, end of file/data
		strInfo =   objLine.ReadLine
		vaMyArray = Split(strInfo, ",")
		For y = 0 to columns-1
			dataArray(x, y) = vaMyArray(y)
		Next
		if x >= rows then exit do
		x = x + 1
	Loop
	
End function

Function initializeReport(objFSO, objFile, outfile, struser)
	'******Create report file*********
	Set objFSO = CreateObject("Scripting.FileSystemObject")
	Set objFile = objFSO.CreateTextFile(outFile, True)
	objFile.Write "******AS400 MACRO SCRIPT REPORT******" & vbCrlf
	objFile.Write "Script:," & "POD Upload" & vbCrlf
	objFile.Write "User:," & struser & vbCrlf
	objFile.Write "Run Date:," & Month(date) & "/" & Day(date) & "/" & Year(date) & vbCrlf
	objFile.Write "------------------------------------" & vbCrlf
	objFile.Write "LOCATION,REBATE NUMBER,REBATE NAME,CONTRACT NUMBER,AS400 BUNZL NUMBER,AS400 COST,AS400 VENDOR PART,VENDOR NUMBER,CSV BUNZL NUMBER,CSV COST ENTERED,CSV VENDOR PART,CSV VENDOR INFO,PENDING,SYSTEM NOTES" & vbCrlf
End function

Function RunMacro(dataArray, rows, columns, objFile, reportNumber)
	Dim x, itemcheck, failCheck
	Dim successfulItems, exceptionsItems
	Dim location, rebatenumber, bunzlnumber, vendorpart, vendordesc, optionD, option1, option2
	Dim price, effdate, expdate, vendornumber, contractnumber, optPending, optRemove, rebatename

	x=1 'start at row 2 (0 counts as the first row) of the csv file. Row 1 contains the template headers
	failCheck = 0
	successfulItems = 0 'counts the number of items that are successfully added to the rebate file. No system messages
	exceptionsItems = 0 ' counts the number of items of exceptions. This means items that have a system message when commited in the AS400
	
	REM Loop until end of CSV file total rows
	Do while x <= rows
		
		REM contract value assignments
		location = Replace(dataArray(x,0), " ", "")
		rebatenumber = Replace(dataArray(x,1), " ", "")
		rebatename = ""
		bunzlnumber = Replace(dataArray(x,2), " ", "")
		vendorpart = Replace(dataArray(x,3), " ", "")
		vendordesc = dataArray(x,4) 'do not remove spaces here
		optionD = Replace(dataArray(x,5), " ", "")
		option1 = Replace(dataArray(x,6), " ", "")
		option2 = Replace(dataArray(x,7), " ", "")
		price = Replace(dataArray(x,8), " ", "")
		effdate = Replace(dataArray(x,9), " ", "")
		expdate = Replace(dataArray(x,10), " ", "")
		vendornumber = Replace(dataArray(x,11), " ", "")
		contractnumber = Replace(dataArray(x,12), " ", "")
		optPending = Replace(dataArray(x,13), " ", "")
		optRemove = Replace(dataArray(x,14), " ", "")


		REM This is to check and change to the required location.
		if location <> Empty then
			if StrComp(autECLSession.autECLPS.GetText(01, 026, 29), "Cost & Sell Price Maintenance") = 0 then
				autECLSession.autECLOIA.WaitForInputReady
				autECLSession.autECLPS.SendKeys "[pf3]"
				autECLSession.autECLPS.Wait 10
				Call GoToCompany(location, failCheck)
				if failCheck = 1 then
					Call MacroFailed
					objFile.Write "Macro failed..."
					Exit function
				else
					'objFile.Write "Location: " & dataArray(x,11) & vbCrlf
				end if
			else
				Call GoToCompany(location, failCheck)
				if failCheck = 1 then
					Call MacroFailed
					objFile.Write "Macro failed..."
					Exit function
				else
					'objFile.Write "Location: " & dataArray(x,11) & vbCrlf
				end if
			end if
		end if	
	
		itemcheck = ""

		REM SCRIPT: enter rebate number
		autECLSession.autECLOIA.WaitForAppAvailable 
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SetCursorPos 14,026
		autECLSession.autECLPS.Wait 10
		autECLSession.autECLOIA.WaitForInputReady 
		autECLSession.autECLPS.SendKeys "[eraseeof]"
		autECLSession.autECLPS.Wait 10
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SendKeys rebatenumber 'enter rebate#
		autECLSession.autECLPS.Wait 10
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SendKeys "[field+]"
		autECLSession.autECLPS.Wait 10
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SendKeys "[enter]"
		autECLSession.autECLPS.Wait 100

		
		
		REM SCRIPT: search current item number from CSV data array
		autECLSession.autECLOIA.WaitForAppAvailable 
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SetCursorPos 01,069
		autECLSession.autECLPS.Wait 10
		autECLSession.autECLOIA.WaitForInputReady 
		autECLSession.autECLPS.SendKeys "[eraseeof]"
		autECLSession.autECLPS.Wait 10
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SendKeys bunzlnumber 'enter item#
		autECLSession.autECLPS.Wait 10
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SendKeys "[enter]"
		autECLSession.autECLPS.Wait 100
		autECLSession.autECLOIA.WaitForAppAvailable
		rebatename = autECLSession.autECLPS.GetText(05, 015, 40)

		if StrComp(optRemove, "y") = 0 Or StrComp(optRemove, "Y") = 0 then
			if StrComp(Replace(autECLSession.autECLPS.GetText(07, 008, 9), " ", ""), bunzlnumber) = 0 then		
				Call removeRebateLine(location, rebatenumber, rebatename ,vendorpart, vendordesc, bunzlnumber, objFile)
				successfulItems = successfulItems + 1
				autECLSession.autECLPS.Wait 10
				autECLSession.autECLOIA.WaitForInputReady
				autECLSession.autECLPS.SendKeys "[pf12]"
				autECLSession.autECLPS.Wait 50
			else
				objFile.Write location & "," & rebatenumber & "," & rebatename & "," & " " & "," & " " & "," & " " & "," & " " & "," & " " & "," & bunzlnumber & "," & " " & "," & vendorpart & "," & vendordesc & "," & "," & "Removal attempted. Item not found" & vbCrlf
				exceptionsItems = exceptionsItems + 1
				autECLSession.autECLPS.Wait 10
				autECLSession.autECLOIA.WaitForInputReady
				autECLSession.autECLPS.SendKeys "[pf12]"
				autECLSession.autECLPS.Wait 50
			end if
			
		elseif StrComp(optPending, "y") = 0 Or StrComp(optPending, "Y") = 0 Or StrComp(optPending, "p") = 0 Or StrComp(optPending, "P") = 0 then
			if StrComp(Replace(autECLSession.autECLPS.GetText(07, 008, 9), " ", ""), bunzlnumber) = 0  then 'check to see if searched bunzl number is the same
				autECLSession.autECLPS.Wait 10
				if StrComp(Replace(autECLSession.autECLPS.GetText(07, 080, 1), " ", ""), "") = 0 then 'bunzl number matches but not pending line
					autECLSession.autECLPS.Wait 10
					if StrComp(Replace(autECLSession.autECLPS.GetText(09, 008, 9), " ", ""), bunzlnumber) = 0  then 'if next line is the same then it's a pending
						REM SCRIPT: Remove item line
						autECLSession.autECLOIA.WaitForInputReady 
						autECLSession.autECLPS.SetCursorPos 09,002
						autECLSession.autECLPS.Wait 10
						autECLSession.autECLOIA.WaitForInputReady
						autECLSession.autECLPS.SendKeys "d"
						autECLSession.autECLPS.Wait 10
						autECLSession.autECLOIA.WaitForInputReady
						autECLSession.autECLPS.SendKeys "[enter]"
						autECLSession.autECLPS.Wait 50
						Call addRebateLine(location, rebatenumber, rebatename,bunzlnumber, optionD, option1, option2, price, effdate, expdate, vendornumber, contractnumber, optPending, failCheck, objFile, vendorpart, vendordesc)
						'if item comes back with a system message then item failed to add
						if failCheck = 1 then
							exceptionsItems = exceptionsItems + 1
						else 
							successfulItems = successfulItems + 1
						end if
						failCheck = 0
					else
						Call addRebateLine(location, rebatenumber, rebatename,bunzlnumber, optionD, option1, option2, price, effdate, expdate, vendornumber, contractnumber, optPending, failCheck, objFile, vendorpart, vendordesc)
						'if item comes back with a system message then item failed to add
						if failCheck = 1 then
							exceptionsItems = exceptionsItems + 1
						else 
							successfulItems = successfulItems + 1
						end if
						failCheck = 0
					end if
				else
					Call addRebateLine(location, rebatenumber, rebatename,bunzlnumber, optionD, option1, option2, price, effdate, expdate, vendornumber, contractnumber, optPending, failCheck, objFile, vendorpart, vendordesc)
					'if item comes back with a system message then item failed to add
					if failCheck = 1 then
						exceptionsItems = exceptionsItems + 1
					else 
						successfulItems = successfulItems + 1
					end if
					failCheck = 0
				end if
			else
				Call addRebateLine(location, rebatenumber, rebatename,bunzlnumber, optionD, option1, option2, price, effdate, expdate, vendornumber, contractnumber, optPending, failCheck, objFile, vendorpart, vendordesc)
				'if item comes back with a system message then item failed to add
				if failCheck = 1 then
					exceptionsItems = exceptionsItems + 1
				else 
					successfulItems = successfulItems + 1
				end if
				failCheck = 0
			end if
		else
			if StrComp(Replace(autECLSession.autECLPS.GetText(07, 008, 9), " ", ""), bunzlnumber) = 0  then
				autECLSession.autECLPS.Wait 10
				Call removeRebateLine_Simple()
				autECLSession.autECLPS.Wait 50
				Call addRebateLine(location, rebatenumber, rebatename, bunzlnumber, optionD, option1, option2, price, effdate, expdate, vendornumber, contractnumber, optPending, failCheck, objFile, vendorpart, vendordesc)
				'if item comes back with a system message then item failed to add
				if failCheck = 1 then
					exceptionsItems = exceptionsItems + 1
				else 
					successfulItems = successfulItems + 1
				end if
				failCheck = 0
			else
				autECLSession.autECLPS.Wait 50
				Call addRebateLine(location, rebatenumber, rebatename, bunzlnumber, optionD, option1, option2, price, effdate, expdate, vendornumber, contractnumber, optPending, failCheck, objFile, vendorpart, vendordesc)
				'if item comes back with a system message then item failed to add
				if failCheck = 1 then
					exceptionsItems = exceptionsItems + 1
				else 
					successfulItems = successfulItems + 1
				end if
				failCheck = 0
			end if
		end if
		
		x=x+1 'increment loop to next line
		
	Loop
	
	REM SCRIPT: Exit DSJOBM065 Opt 4
	autECLSession.autECLOIA.WaitForInputReady
	autECLSession.autECLPS.SendKeys "[pf3]"
	autECLSession.autECLPS.Wait 50

	Call MacroComplete(successfulItems, exceptionsItems, reportNumber, objFile)
End function


Function GoToCompany(location, failCheck)
	Dim Found, row, column,maxRows, count

	REM Script to get to MASTERMENU
	If StrComp(autECLSession.autECLPS.GetText(01, 072, 8), "MNU003C1") = 1 then
		Do while StrComp(autECLSession.autECLPS.GetText(01, 072, 8), "MNU003C1") = 1
			autECLSession.autECLOIA.WaitForInputReady
			autECLSession.autECLPS.SendKeys "[pf3]"
			autECLSession.autECLPS.Wait 25	
		loop
		autECLSession.autECLOIA.WaitForAppAvailable
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SendKeys "[pf4]"
		autECLSession.autECLPS.Wait 10
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SetCursorPos 05,016
		autECLSession.autECLPS.Wait 10
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SendKeys "mastermenu"
		autECLSession.autECLPS.Wait 10
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SendKeys "[enter]"
		autECLSession.autECLPS.Wait 10
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SetCursorPos 06,002
		autECLSession.autECLPS.Wait 10	
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SendKeys "1"
		autECLSession.autECLPS.Wait 10	
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SendKeys "[enter]"
		autECLSession.autECLPS.Wait 100
	else
		autECLSession.autECLOIA.WaitForAppAvailable
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SendKeys "[pf4]"
		autECLSession.autECLPS.Wait 10
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SetCursorPos 05,016
		autECLSession.autECLPS.Wait 10
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SendKeys "mastermenu"
		autECLSession.autECLPS.Wait 10
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SendKeys "[enter]"
		autECLSession.autECLPS.Wait 10
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SetCursorPos 06,002
		autECLSession.autECLPS.Wait 10	
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SendKeys "1"
		autECLSession.autECLPS.Wait 10	
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SendKeys "[enter]"
		autECLSession.autECLPS.Wait 100
	end if

	
	'====================
	
	Found = 0
	row = 9 'starting row
	column = 22 'starting column
	maxRows = 9
	count = 0

	autECLSession.autECLOIA.WaitForAppAvailable
	autECLSession.autECLOIA.WaitForInputReady
	if StrComp(autECLSession.autECLPS.GetText(001, 009, 3), location) = 0 then
		'already in requested location
		REM Script to get to MASTERMENU
		autECLSession.autECLOIA.WaitForAppAvailable
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SendKeys "[pf4]"
		autECLSession.autECLPS.Wait 10
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SetCursorPos 05,016
		autECLSession.autECLPS.Wait 10
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SendKeys "DSJOBM065"
		autECLSession.autECLPS.Wait 10
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SendKeys "[enter]"
		autECLSession.autECLPS.Wait 10
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SetCursorPos 06,002
		autECLSession.autECLPS.Wait 10	
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SendKeys "1"
		autECLSession.autECLPS.Wait 10	
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SendKeys "[enter]"
		autECLSession.autECLPS.Wait 10
		
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SetCursorPos 21,010
		autECLSession.autECLPS.Wait 10
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SendKeys "4"
		autECLSession.autECLPS.Wait 10
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SendKeys "[enter]"
		autECLSession.autECLPS.Wait 10
		
	else
		autECLSession.autECLOIA.WaitForAppAvailable
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SendKeys "[pf11]"
		autECLSession.autECLPS.Wait 50

		Do while Found = 0
			autECLSession.autECLOIA.WaitForInputReady
			autECLSession.autECLPS.Wait 10
			if StrComp(autECLSession.autECLPS.GetText(row, column, 3), location) = 0 And StrComp(autECLSession.autECLPS.GetText(row, 19, 2), " 1") <> 0  then 'if location equals AS400 and not company 1
				autECLSession.autECLOIA.WaitForInputReady
				autECLSession.autECLPS.SetCursorPos row, 016
				autECLSession.autECLPS.Wait 10
				autECLSession.autECLOIA.WaitForInputReady
				autECLSession.autECLPS.SendKeys "x"
				autECLSession.autECLPS.Wait 10
				autECLSession.autECLOIA.WaitForInputReady
				autECLSession.autECLPS.SendKeys "[enter]"
				autECLSession.autECLPS.Wait 10
				Found = 1
				Exit do
			else
				if count >= maxRows then
					autECLSession.autECLOIA.WaitForInputReady
					if StrComp(autECLSession.autECLPS.GetText(18, 061, 6), "Bottom") = 0 then
						MsgBox("Location not found.")
						failCheck = 1
						autECLSession.autECLOIA.WaitForInputReady
						autECLSession.autECLPS.SendKeys "[pf12]"
						autECLSession.autECLPS.Wait 10
						Exit do
					else
						autECLSession.autECLOIA.WaitForInputReady
						autECLSession.autECLPS.SendKeys "[roll up]"
						autECLSession.autECLPS.Wait 10
						row = 9
						count = 0
					end if
				else 
					row = row + 1
					count = count + 1
				end if
			end if
		Loop
			
			
		if failCheck = 1 then
			autECLSession.autECLPS.Wait 25
			if StrComp(autECLSession.autECLPS.GetText(01, 009, 3), location) = 0 then
				failCheck = 0
				REM Script to get to COST & SELL PRICE MAINTENANCE SCREEN
				autECLSession.autECLOIA.WaitForAppAvailable
				autECLSession.autECLOIA.WaitForInputReady
				autECLSession.autECLPS.SendKeys "[pf4]"
				autECLSession.autECLPS.Wait 10
				autECLSession.autECLOIA.WaitForInputReady
				autECLSession.autECLPS.SetCursorPos 05,016
				autECLSession.autECLPS.Wait 10
				autECLSession.autECLOIA.WaitForInputReady
				autECLSession.autECLPS.SendKeys "DSJOBM065"
				autECLSession.autECLPS.Wait 10
				autECLSession.autECLOIA.WaitForInputReady
				autECLSession.autECLPS.SendKeys "[enter]"
				autECLSession.autECLPS.Wait 10
				autECLSession.autECLOIA.WaitForInputReady
				autECLSession.autECLPS.SetCursorPos 06,002
				autECLSession.autECLPS.Wait 10	
				autECLSession.autECLOIA.WaitForInputReady
				autECLSession.autECLPS.SendKeys "1"
				autECLSession.autECLPS.Wait 10	
				autECLSession.autECLOIA.WaitForInputReady
				autECLSession.autECLPS.SendKeys "[enter]"
				autECLSession.autECLPS.Wait 10
				
				autECLSession.autECLOIA.WaitForInputReady
				autECLSession.autECLPS.SetCursorPos 21,010
				autECLSession.autECLPS.Wait 10
				autECLSession.autECLOIA.WaitForInputReady
				autECLSession.autECLPS.SendKeys "4"
				autECLSession.autECLPS.Wait 10
				autECLSession.autECLOIA.WaitForInputReady
				autECLSession.autECLPS.SendKeys "[enter]"
				autECLSession.autECLPS.Wait 10
			else
				Exit Function
			end if
		else
			REM Script to get to COST & SELL PRICE MAINTENANCE SCREEN
			autECLSession.autECLOIA.WaitForAppAvailable
			autECLSession.autECLOIA.WaitForInputReady
			autECLSession.autECLPS.SendKeys "[pf4]"
			autECLSession.autECLPS.Wait 10
			autECLSession.autECLOIA.WaitForInputReady
			autECLSession.autECLPS.SetCursorPos 05,016
			autECLSession.autECLPS.Wait 10
			autECLSession.autECLOIA.WaitForInputReady
			autECLSession.autECLPS.SendKeys "DSJOBM065"
			autECLSession.autECLPS.Wait 10
			autECLSession.autECLOIA.WaitForInputReady
			autECLSession.autECLPS.SendKeys "[enter]"
			autECLSession.autECLPS.Wait 10
			autECLSession.autECLOIA.WaitForInputReady
			autECLSession.autECLPS.SetCursorPos 06,002
			autECLSession.autECLPS.Wait 10	
			autECLSession.autECLOIA.WaitForInputReady
			autECLSession.autECLPS.SendKeys "1"
			autECLSession.autECLPS.Wait 10	
			autECLSession.autECLOIA.WaitForInputReady
			autECLSession.autECLPS.SendKeys "[enter]"
			autECLSession.autECLPS.Wait 10
			
			autECLSession.autECLOIA.WaitForInputReady
			autECLSession.autECLPS.SetCursorPos 21,010
			autECLSession.autECLPS.Wait 10
			autECLSession.autECLOIA.WaitForInputReady
			autECLSession.autECLPS.SendKeys "4"
			autECLSession.autECLPS.Wait 10
			autECLSession.autECLOIA.WaitForInputReady
			autECLSession.autECLPS.SendKeys "[enter]"
			autECLSession.autECLPS.Wait 10
		end if
	end if	
End function

Function addRebateLine(location, rebatenumber, rebatename, bunzlnumber, optionD, option1, option2, price, effdate, expdate, vendornumber, contractnumber, optPending, failCheck, objFile, vendorpart, vendordesc)
	Dim pending
	REM SCRIPT: Add POD line to current rebate file
	autECLSession.autECLOIA.WaitForAppAvailable 
	autECLSession.autECLOIA.WaitForInputReady
	autECLSession.autECLPS.SendKeys "[pf1]"
	autECLSession.autECLPS.Wait 10
	autECLSession.autECLOIA.WaitForInputReady 
	autECLSession.autECLPS.SetCursorPos 07,008
	autECLSession.autECLPS.Wait 10
	autECLSession.autECLOIA.WaitForInputReady
	autECLSession.autECLPS.SendKeys bunzlnumber 'enter item#
	autECLSession.autECLPS.Wait 10
	autECLSession.autECLOIA.WaitForInputReady
	autECLSession.autECLPS.SendKeys "[tab]"
	autECLSession.autECLPS.Wait 10
	if optionD = Empty then
		autECLSession.autECLOIA.WaitForInputReady 
		autECLSession.autECLPS.SendKeys "[tab]" 'skip D field
		autECLSession.autECLPS.Wait 10
	else
		autECLSession.autECLOIA.WaitForInputReady 
		autECLSession.autECLPS.SendKeys optionD 'enter D field
		autECLSession.autECLPS.Wait 10
	end if
	autECLSession.autECLOIA.WaitForInputReady 
	autECLSession.autECLPS.SendKeys option1 'enter field 1 
	autECLSession.autECLPS.Wait 10
	autECLSession.autECLOIA.WaitForInputReady
	autECLSession.autECLPS.SendKeys option2 'enter field 2 
	autECLSession.autECLPS.Wait 10
	autECLSession.autECLOIA.WaitForInputReady
	autECLSession.autECLPS.SendKeys price 'enter value/percent 
	autECLSession.autECLPS.Wait 10
	autECLSession.autECLOIA.WaitForInputReady
	autECLSession.autECLPS.SendKeys "[tab]"
	autECLSession.autECLPS.Wait 10
	autECLSession.autECLOIA.WaitForInputReady
	autECLSession.autECLPS.SendKeys effdate 'enter eff date
	autECLSession.autECLPS.Wait 10
	autECLSession.autECLOIA.WaitForInputReady
	autECLSession.autECLPS.SendKeys "[tab]"
	autECLSession.autECLPS.Wait 10
	autECLSession.autECLOIA.WaitForInputReady
	autECLSession.autECLPS.SendKeys expdate 'enter exp date
	autECLSession.autECLPS.Wait 10
	autECLSession.autECLOIA.WaitForInputReady
	autECLSession.autECLPS.SendKeys "[tab]"
	autECLSession.autECLPS.Wait 10
	autECLSession.autECLOIA.WaitForInputReady
	autECLSession.autECLPS.SendKeys vendornumber 'enter vendor number
	autECLSession.autECLPS.Wait 10
	if StrComp(optPending, "y") = 0 Or StrComp(optPending, "Y") = 0 Or StrComp(optPending,"p") = 0 Or StrComp(optPending, "P") = 0 then
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SendKeys "P"
		autECLSession.autECLPS.Wait 10
		pending = "Y"
	else
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SendKeys "[tab]"
		autECLSession.autECLPS.Wait 10
		pending = ""
	end if
	autECLSession.autECLOIA.WaitForInputReady
	autECLSession.autECLPS.SendKeys contractnumber 'enter contract ID
	autECLSession.autECLPS.Wait 10
	autECLSession.autECLOIA.WaitForInputReady
	autECLSession.autECLPS.SendKeys "[enter]"
	autECLSession.autECLPS.Wait 100

	if StrComp(Replace(autECLSession.autECLPS.GetText(24, 001, 75), " ", ""), "") = 1 then
		failCheck = 1
	end if

	autECLSession.autECLPS.Wait 50
	autECLSession.autECLOIA.WaitForInputReady
	objFile.Write location & "," & rebatenumber & "," & rebatename & "," & autECLSession.autECLPS.GetText(08, 021, 15) & "," & autECLSession.autECLPS.GetText(07, 008, 9) & "," & autECLSession.autECLPS.GetText(07, 043, 11) & "," & autECLSession.autECLPS.GetText(07, 021, 15) & "," & autECLSession.autECLPS.GetText(07, 073, 6) & "," & bunzlnumber & "," & price & "," & vendorpart & "," & vendordesc & "," & pending & "," & autECLSession.autECLPS.GetText(24, 001, 75) & vbCrlf
	autECLSession.autECLPS.Wait 50

	autECLSession.autECLOIA.WaitForInputReady
	autECLSession.autECLPS.SendKeys "[pf12]"
	autECLSession.autECLPS.Wait 10
End function

Function removeRebateLine_Simple()
	REM SCRIPT: Remove item line
	autECLSession.autECLOIA.WaitForInputReady 
	autECLSession.autECLPS.SetCursorPos 07,002
	autECLSession.autECLPS.Wait 10
	autECLSession.autECLOIA.WaitForInputReady
	autECLSession.autECLPS.SendKeys "d"
	autECLSession.autECLPS.Wait 10
	autECLSession.autECLOIA.WaitForInputReady
	autECLSession.autECLPS.SendKeys "[enter]"
	autECLSession.autECLPS.Wait 10
End function


Function removeRebateLine(location, rebatenumber, vendorpart, vendordesc, bunzlnumber, objFile)
	autECLSession.autECLPS.Wait 50
	objFile.Write location & "," & rebatenumber & "," & rebatename & "," & autECLSession.autECLPS.GetText(08, 021, 15) & "," & autECLSession.autECLPS.GetText(07, 008, 9) & "," & autECLSession.autECLPS.GetText(07, 043, 11) & "," & autECLSession.autECLPS.GetText(07, 021, 15) & "," & autECLSession.autECLPS.GetText(07, 073, 6) & "," & bunzlnumber & "," & " " & "," & vendorpart & "," & vendordesc & "," & "," & "item removed" & vbCrlf

	REM SCRIPT: Remove item line
	autECLSession.autECLOIA.WaitForInputReady 
	autECLSession.autECLPS.SetCursorPos 07,002
	autECLSession.autECLPS.Wait 10
	autECLSession.autECLOIA.WaitForInputReady
	autECLSession.autECLPS.SendKeys "d"
	autECLSession.autECLPS.Wait 10
	autECLSession.autECLOIA.WaitForInputReady
	autECLSession.autECLPS.SendKeys "[enter]"
	autECLSession.autECLPS.Wait 10
End function

Function MacroComplete(successfulItems, exceptionsItems, reportNumber, objFile)
	Dim finalSummary
	finalSummary = "Update Complete." & vbCrlf & "Successful lines processed: " & successfulItems & vbCrlf & "Exceptions lines found: " & exceptionsItems & vbCrlf & "Please refer to MSR report number " & reportNumber & "." & vbCrlf
	objFile.Write "------------------------------------" & vbCrlf
	objFile.Write "END REPORT" & vbCrlf
	objFile.Close
	MsgBox(finalSummary)
End function

Function MacroFailed()
	MsgBox("Update Not Complete.")
End function
