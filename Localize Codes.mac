[PCOMM SCRIPT HEADER]
LANGUAGE=VBSCRIPT
DESCRIPTION=
[PCOMM SCRIPT SOURCE]
OPTION EXPLICIT
autECLSession.SetConnectionByName(ThisSessionName)

REM Author: Joey Bajcar
REM Date Last Revised: September 4, 2018
REM This line calls the macro subroutine
main

sub main()
	'*******Variables*******
	Dim aFile, myFile, filePath
	Dim objFSO, outfile, objFile 'data dump file variables
	Dim datevalue, randomNumber, rnString
	
	Dim vaMyArray, objLine, strInfo, x, y
	Dim arraySize, rows, columns
	Dim dataArray : dataArray = Array()
	Dim tempString
	Const ForReading = 1
	'*******Declarations*******
	columns = 14
	Call RndNumber(randomNumber, rnString)
	datevalue = Day(date)&Month(date)&Year(date)
	filePath = "C:\Users\jbajcar\AppData\Roaming\IBM\Client Access\Emulator\private\CSV_SetUpCodes.csv"
	outfile = "C:\Users\jbajcar\AppData\Roaming\IBM\Client Access\Emulator\private\AS400-MSR\" & "AS400-MSR_" & datevalue & "_" & rnString & "_LOCALIZE" & ".txt" 'data dump file
	'**************************
	
	'******Calculate file size in ROWS******
	Call CreateFile(aFile, myFile, filePath, objLine) 'load in CSV file
	Call FindFileSize(rows, objLine, strInfo, tempString) 'calls function to calculate number of rows in CSV file
	ReDim dataArray(rows, columns) 'redefine array based on CSV file size
	
	'******Create data dump file*********
	Set objFSO = CreateObject("Scripting.FileSystemObject")
	Set objFile = objFSO.CreateTextFile(outFile, True)
	objFile.Write "******AS400 MACRO SCRIPT REPORT******" & vbCrlf
	objFile.Write "Script: Localize Items" & vbCrlf
	objFile.Write "User: CNOABAJCA" & vbCrlf
	objFile.Write "Run Date: " & date & vbCrlf
	objFile.Write "------------------------------------" & vbCrlf
	
	'******Load data in CSV file into array******
	Call CreateFile(aFile, myFile, filePath, objLine) 'reloads in CSV files
	Call LoadData(objLine, dataArray, columns, strInfo, vaMyArray, rows) 'load data from CSV file into data array
	
	'******Run AS400 macro program******
	Call RunMacro(dataArray, rows, columns, objFile)
	Call MacroComplete()
	objFile.Write "------------------------------------" & vbCrlf
	objFile.Write "END REPORT" & vbCrlf
	objFile.Close
	
end sub

Function RndNumber(randomNumber, rnString)
	Dim nLow, nHigh,x
	rnString = ""
	For x = 1 to 6
		nLow = 0
		nHigh = 9
		Randomize
		randomNumber = Int((nHigh - nLow + 1)*Rnd + nLow)
		rnString = rnString & randomNumber
	Next
End function

Function CreateFile(aFile, myFile, filePath, objLine)
	Set aFile = CreateObject("Scripting.FileSystemObject") 'create file object
	Set myFile = aFile.GetFile(filePath) 'create file object with CSV file
	Set objLine = myFile.OpenAsTextStream(1) 'create object to stream data from CSV file
End function

Function FindFileSize(rows, objLine, strInfo, tempString)
	rows = 0
	Do while objLine.AtEndOfStream <> true 'read file until null pointer, end of file/data
		strInfo = objLine.ReadLine
		tempString = Split(strInfo,",")
		if StrComp(tempString(1), " ") = -1 then 'checks to see if the cell is blank and stops ReadIn stream
			Exit do
		end if
		rows = rows + 1
	Loop
	rows = rows - 1
End function

Function LoadData(objLine, dataArray, columns, strInfo, vaMyArray, rows)
	Dim x,y
	x = 0
	Do while objLine.AtEndOfStream <> true 'read file until null pointer, end of file/data
		strInfo =   objLine.ReadLine
		vaMyArray = Split(strInfo, ",")
		For y = 0 to columns-1
			dataArray(x, y) = vaMyArray(y)
		Next
		if x >= rows then exit do
		x = x + 1
	Loop
	
End function

Function RunMacro(dataArray, rows, columns, objFile)
	Dim x, check, message, itemstatus
	x=1
	message = ""
	itemstatus = ""
	
	Do while x <= rows
		autECLSession.autECLOIA.WaitForAppAvailable
		
		autECLSession.autECLOIA.WaitForInputReady 
		autECLSession.autECLPS.SetCursorPos 06,042
		autECLSession.autECLPS.Wait 25
		autECLSession.autECLOIA.WaitForInputReady 
		autECLSession.autECLPS.SendKeys "[eraseeof]"
		autECLSession.autECLPS.Wait 25
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SendKeys dataArray(x,0) 'enter item number
		autECLSession.autECLPS.Wait 25
		
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SendKeys "[enter]"
		autECLSession.autECLPS.Wait 25
		
		autECLSession.autECLPS.Wait 150
		autECLSession.autECLOIA.WaitForAppAvailable
		autECLSession.autECLOIA.WaitForInputReady
		
		if StrComp(autECLSession.autECLPS.GetText(08, 024, 23), "Corporate Item Comments") = 0 then
			autECLSession.autECLOIA.WaitForInputReady
			autECLSession.autECLPS.SendKeys "[pf12]"
			autECLSession.autECLPS.Wait 25
		end if
		
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SendKeys "[pf1]"
		autECLSession.autECLPS.Wait 25
		
		autECLSession.autECLOIA.WaitForAppAvailable
		autECLSession.autECLOIA.WaitForInputReady
		itemstatus = autECLSession.autECLPS.GetText(24, 002, 34)
		if StrComp(itemstatus, "Item Already Exists on Item Master") = 0 then
			objFile.Write dataArray(x,0) & " " & "/Item not localized" & " " & "/System note:" & itemstatus & vbCrLf
		else
			objFile.Write dataArray(x,0) & " " & "/Item successfully localized" & vbCrLf
		end if
		autECLSession.autECLPS.Wait 25
		
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SendKeys "[pf12]"
		autECLSession.autECLPS.Wait 25
		
		autECLSession.autECLOIA.WaitForInputReady
		autECLSession.autECLPS.SendKeys "[pf12]"
		autECLSession.autECLPS.Wait 25

		x=x+1
	Loop
	
	
End function

Function MacroComplete()
	MsgBox("Update Complete.")
End function

Function MacroFailed()
	MsgBox("Update Not Complete.")
End function
